{"ast":null,"code":"import{useState}from\"react\";import DataTable from\"./DataTable\";import WordDictionary from\"./WordDictionary\";import wordSearch from\"./wordSearch\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function WordInput(){const[word,setWord]=useState(\"\");const[wordDesc,setWordDesc]=useState(\"\");const handleChange=event=>{event.preventDefault();setWord(event.target.value);};const handleClick=async event=>{event.preventDefault();const response=await wordSearch(word);setWordDesc(response);};const noOfWords=words=>words.split(/[ .:;?!~,`\"&|()<>{}[\\]\\r\\n/\\\\]+/).filter(item=>{item=item.replace(/[^\\w\\s']|_/g,'');return item!=='';});// header and logic for data table\nconst config=[{label:'Characters',render:word=>word.length},{label:'Words',render:word=>noOfWords(word).length}];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"form\",{className:\"d-flex mb-3 mt-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control me-3\",placeholder:\"Type in a single word ex: developer \",value:word,onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{className:\"btn text-nowrap text-white\",style:{backgroundColor:\"blueviolet\"},onClick:handleClick,children:\"Process Word\"})]}),/*#__PURE__*/_jsx(DataTable,{word:word,config:config}),/*#__PURE__*/_jsx(\"div\",{className:\"border p-2\",children:wordDesc===\"\"?null:/*#__PURE__*/_jsx(WordDictionary,{data:wordDesc})})]});}export default WordInput;","map":{"version":3,"names":["useState","DataTable","WordDictionary","wordSearch","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","WordInput","word","setWord","wordDesc","setWordDesc","handleChange","event","preventDefault","target","value","handleClick","response","noOfWords","words","split","filter","item","replace","config","label","render","length","children","className","type","placeholder","onChange","style","backgroundColor","onClick","data"],"sources":["/Users/goodwinenoch/textanalyzer/src/components/WordInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport DataTable from \"./DataTable\";\nimport WordDictionary from \"./WordDictionary\";\nimport wordSearch from \"./wordSearch\";\n\nfunction WordInput (){\n\n    const [word, setWord] = useState(\"\");\n    const [wordDesc, setWordDesc] = useState(\"\");\n\n    const handleChange = (event)=>{\n        event.preventDefault();\n        setWord(event.target.value);\n    }\n\n    const handleClick = async (event)=>{\n        event.preventDefault();\n        const response = await wordSearch(word);\n        setWordDesc(response);\n    }\n    const noOfWords = (words) => words.split(/[ .:;?!~,`\"&|()<>{}[\\]\\r\\n/\\\\]+/ ).filter(item => {\n        item = item.replace(/[^\\w\\s']|_/g, '')\n        return item !== ''; \n    });\n\n    // header and logic for data table\n    const config = [\n    {\n        label: 'Characters',\n        render: (word) => word.length\n    },\n    {\n        label: 'Words',\n        render: (word) => noOfWords(word).length\n    }\n    ];\n      \n    return(\n       <>\n            <form className=\"d-flex mb-3 mt-3\">\n                <input type=\"text\" className=\"form-control me-3\" placeholder=\"Type in a single word ex: developer \" value={word} onChange = {handleChange}/>   \n                <button className=\"btn text-nowrap text-white\" style={{backgroundColor : \"blueviolet\"}} onClick={handleClick}>Process Word</button>\n            </form>\n            <DataTable word={word} config={config}/> \n            <div className=\"border p-2\">\n                {wordDesc === \"\" ? null : <WordDictionary data={wordDesc}/>}\n            </div>\n       </>\n    )\n}\nexport default WordInput;"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,MAAO,CAAAC,UAAU,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEtC,QAAS,CAAAC,SAASA,CAAA,CAAG,CAEjB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACa,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAE5C,KAAM,CAAAe,YAAY,CAAIC,KAAK,EAAG,CAC1BA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtBL,OAAO,CAACI,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAC,WAAW,CAAG,KAAO,CAAAJ,KAAK,EAAG,CAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAlB,UAAU,CAACQ,IAAI,CAAC,CACvCG,WAAW,CAACO,QAAQ,CAAC,CACzB,CAAC,CACD,KAAM,CAAAC,SAAS,CAAIC,KAAK,EAAKA,KAAK,CAACC,KAAK,CAAC,iCAAkC,CAAC,CAACC,MAAM,CAACC,IAAI,EAAI,CACxFA,IAAI,CAAGA,IAAI,CAACC,OAAO,CAAC,aAAa,CAAE,EAAE,CAAC,CACtC,MAAO,CAAAD,IAAI,GAAK,EAAE,CACtB,CAAC,CAAC,CAEF;AACA,KAAM,CAAAE,MAAM,CAAG,CACf,CACIC,KAAK,CAAE,YAAY,CACnBC,MAAM,CAAGnB,IAAI,EAAKA,IAAI,CAACoB,MAC3B,CAAC,CACD,CACIF,KAAK,CAAE,OAAO,CACdC,MAAM,CAAGnB,IAAI,EAAKW,SAAS,CAACX,IAAI,CAAC,CAACoB,MACtC,CAAC,CACA,CAED,mBACGxB,KAAA,CAAAE,SAAA,EAAAuB,QAAA,eACKzB,KAAA,SAAM0B,SAAS,CAAC,kBAAkB,CAAAD,QAAA,eAC9B3B,IAAA,UAAO6B,IAAI,CAAC,MAAM,CAACD,SAAS,CAAC,mBAAmB,CAACE,WAAW,CAAC,sCAAsC,CAAChB,KAAK,CAAER,IAAK,CAACyB,QAAQ,CAAIrB,YAAa,CAAC,CAAC,cAC5IV,IAAA,WAAQ4B,SAAS,CAAC,4BAA4B,CAACI,KAAK,CAAE,CAACC,eAAe,CAAG,YAAY,CAAE,CAACC,OAAO,CAAEnB,WAAY,CAAAY,QAAA,CAAC,cAAY,CAAQ,CAAC,EACjI,CAAC,cACP3B,IAAA,CAACJ,SAAS,EAACU,IAAI,CAAEA,IAAK,CAACiB,MAAM,CAAEA,MAAO,CAAC,CAAC,cACxCvB,IAAA,QAAK4B,SAAS,CAAC,YAAY,CAAAD,QAAA,CACtBnB,QAAQ,GAAK,EAAE,CAAG,IAAI,cAAGR,IAAA,CAACH,cAAc,EAACsC,IAAI,CAAE3B,QAAS,CAAC,CAAC,CAC1D,CAAC,EACT,CAAC,CAEV,CACA,cAAe,CAAAH,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}