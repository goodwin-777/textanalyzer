{"ast":null,"code":"var _jsxFileName = \"/Users/goodwinenoch/textanalyzer/src/components/WordInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport DataTable from \"./DataTable\";\nimport WordDescription from \"./WordDescription\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WordInput() {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const handleChange = event => {\n    setWord(event.target.value);\n  };\n  const noOfWords = words => words.split(/[ .:;?!~,`\"&|()<>{}\\[\\]\\r\\n/\\\\]+/).filter(item => {\n    item = item.replace(/[^\\w\\s\\']|_/g, '');\n    return item != '';\n  });\n\n  // header and logic for data table\n  const config = [{\n    label: 'Characters',\n    render: word => word.length\n  }, {\n    label: 'Words',\n    render: word => noOfWords(word).length\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex mb-3 mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control me-3\",\n        placeholder: \"Type in a single word ex: developer \",\n        value: word,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn text-nowrap text-white\",\n        style: {\n          backgroundColor: \"blueviolet\"\n        },\n        children: \"Process Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      word: word,\n      config: config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WordDescription, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(WordInput, \"KIhUDbJtUcjE+1oNeU7mNfhsQvU=\");\n_c = WordInput;\nexport default WordInput;\nvar _c;\n$RefreshReg$(_c, \"WordInput\");","map":{"version":3,"names":["useState","DataTable","WordDescription","jsxDEV","_jsxDEV","Fragment","_Fragment","WordInput","_s","word","setWord","handleChange","event","target","value","noOfWords","words","split","filter","item","replace","config","label","render","length","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/goodwinenoch/textanalyzer/src/components/WordInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport DataTable from \"./DataTable\";\nimport WordDescription from \"./WordDescription\";\n\nfunction WordInput (){\n\n    const [word, setWord] = useState(\"\");\n\n    const handleChange = (event)=>{\n        setWord(event.target.value);\n    }\n\n    const noOfWords = (words) => words.split(/[ .:;?!~,`\"&|()<>{}\\[\\]\\r\\n/\\\\]+/ ).filter(item => {\n        item = item.replace(/[^\\w\\s\\']|_/g, '')\n        return item != ''; \n    });\n\n    // header and logic for data table\n    const config = [\n    {\n        label: 'Characters',\n        render: (word) => word.length\n    },\n    {\n        label: 'Words',\n        render: (word) => noOfWords(word).length\n    }\n    ];\n      \n    return(\n       <>\n            <div className=\"d-flex mb-3 mt-3\">\n                <input type=\"text\" className=\"form-control me-3\" placeholder=\"Type in a single word ex: developer \" value={word} onChange = {handleChange}/>   \n                <button className=\"btn text-nowrap text-white\" style={{backgroundColor : \"blueviolet\"}}>Process Word</button>\n            </div>\n            <DataTable word={word} config={config}/>   \n            <WordDescription/>\n       </>\n    )\n}\nexport default WordInput;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,YAAY,GAAIC,KAAK,IAAG;IAC1BF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,SAAS,GAAIC,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC,kCAAmC,CAAC,CAACC,MAAM,CAACC,IAAI,IAAI;IACzFA,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;IACvC,OAAOD,IAAI,IAAI,EAAE;EACrB,CAAC,CAAC;;EAEF;EACA,MAAME,MAAM,GAAG,CACf;IACIC,KAAK,EAAE,YAAY;IACnBC,MAAM,EAAGd,IAAI,IAAKA,IAAI,CAACe;EAC3B,CAAC,EACD;IACIF,KAAK,EAAE,OAAO;IACdC,MAAM,EAAGd,IAAI,IAAKM,SAAS,CAACN,IAAI,CAAC,CAACe;EACtC,CAAC,CACA;EAED,oBACGpB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACKrB,OAAA;MAAKsB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC7BrB,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAACD,SAAS,EAAC,mBAAmB;QAACE,WAAW,EAAC,sCAAsC;QAACd,KAAK,EAAEL,IAAK;QAACoB,QAAQ,EAAIlB;MAAa;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC5I7B,OAAA;QAAQsB,SAAS,EAAC,4BAA4B;QAACQ,KAAK,EAAE;UAACC,eAAe,EAAG;QAAY,CAAE;QAAAV,QAAA,EAAC;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5G,CAAC,eACN7B,OAAA,CAACH,SAAS;MAACQ,IAAI,EAAEA,IAAK;MAACY,MAAM,EAAEA;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACxC7B,OAAA,CAACF,eAAe;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACrB,CAAC;AAEV;AAACzB,EAAA,CAnCQD,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAoClB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}