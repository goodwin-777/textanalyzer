{"ast":null,"code":"var _jsxFileName = \"/Users/goodwinenoch/textanalyzer/src/components/WordInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport DataTable from \"./DataTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WordInput() {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const handleChange = event => {\n    setWord(event.target.value);\n  };\n  console.log(word.includes(/[^\\w\\s\\']|_/g));\n  function countWords(s) {\n    s = s.replace(/(^\\s*)|(\\s*$)/gi, \"\"); //exclude  start and end white-space\n    s = s.replace(/[ ]{2,}/gi, \" \"); //2 or more space to 1\n    s = s.replace(/\\n /, \"\\n\"); // exclude newline with a start spacing\n    return s.split(' ').filter(function (str) {\n      return str != \"\";\n    }).length;\n    //return s.split(' ').filter(String).length; - this can also be used\n  }\n  // header and logic for data table\n  const config = [{\n    label: 'Characters',\n    render: word => countWords(word)\n  }, {\n    label: 'Words',\n    render: word => word.split(\" \").filter(item => item != '').length\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex mb-3 mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control me-3\",\n        placeholder: \"Type in a single word ex: developer \",\n        value: word,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn text-nowrap text-white\",\n        style: {\n          backgroundColor: \"blueviolet\"\n        },\n        children: \"Process Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      word: word,\n      config: config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(WordInput, \"KIhUDbJtUcjE+1oNeU7mNfhsQvU=\");\n_c = WordInput;\nexport default WordInput;\nvar _c;\n$RefreshReg$(_c, \"WordInput\");","map":{"version":3,"names":["useState","DataTable","jsxDEV","_jsxDEV","Fragment","_Fragment","WordInput","_s","word","setWord","handleChange","event","target","value","console","log","includes","countWords","s","replace","split","filter","str","length","config","label","render","item","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/goodwinenoch/textanalyzer/src/components/WordInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport DataTable from \"./DataTable\";\n\nfunction WordInput (){\n    const [word, setWord] = useState(\"\");\n    const handleChange = (event)=>{\n        setWord(event.target.value);\n    }\n    console.log(word.includes(/[^\\w\\s\\']|_/g));\n    function countWords(s){\n        s = s.replace(/(^\\s*)|(\\s*$)/gi,\"\");//exclude  start and end white-space\n        s = s.replace(/[ ]{2,}/gi,\" \");//2 or more space to 1\n        s = s.replace(/\\n /,\"\\n\"); // exclude newline with a start spacing\n        return s.split(' ').filter(function(str){return str!=\"\"}).length;\n        //return s.split(' ').filter(String).length; - this can also be used\n    }\n    // header and logic for data table\n    const config = [\n    {\n        label: 'Characters',\n        render: (word) => countWords(word)\n    },\n    {\n        label: 'Words',\n        render: (word) => word.split(\" \").filter(item => item != '').length\n    }\n    ];\n      \n    return(\n       <>\n            <div className=\"d-flex mb-3 mt-3\">\n                <input type=\"text\" className=\"form-control me-3\" placeholder=\"Type in a single word ex: developer \" value={word} onChange = {handleChange}/>   \n                <button className=\"btn text-nowrap text-white\" style={{backgroundColor : \"blueviolet\"}}>Process Word</button>\n            </div>\n            <DataTable word={word} config={config}/>   \n       </>\n    )\n}\nexport default WordInput;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMU,YAAY,GAAIC,KAAK,IAAG;IAC1BF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EACDC,OAAO,CAACC,GAAG,CAACP,IAAI,CAACQ,QAAQ,CAAC,cAAc,CAAC,CAAC;EAC1C,SAASC,UAAUA,CAACC,CAAC,EAAC;IAClBA,CAAC,GAAGA,CAAC,CAACC,OAAO,CAAC,iBAAiB,EAAC,EAAE,CAAC,CAAC;IACpCD,CAAC,GAAGA,CAAC,CAACC,OAAO,CAAC,WAAW,EAAC,GAAG,CAAC,CAAC;IAC/BD,CAAC,GAAGA,CAAC,CAACC,OAAO,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC,CAAC;IAC3B,OAAOD,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,UAASC,GAAG,EAAC;MAAC,OAAOA,GAAG,IAAE,EAAE;IAAA,CAAC,CAAC,CAACC,MAAM;IAChE;EACJ;EACA;EACA,MAAMC,MAAM,GAAG,CACf;IACIC,KAAK,EAAE,YAAY;IACnBC,MAAM,EAAGlB,IAAI,IAAKS,UAAU,CAACT,IAAI;EACrC,CAAC,EACD;IACIiB,KAAK,EAAE,OAAO;IACdC,MAAM,EAAGlB,IAAI,IAAKA,IAAI,CAACY,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACM,IAAI,IAAIA,IAAI,IAAI,EAAE,CAAC,CAACJ;EACjE,CAAC,CACA;EAED,oBACGpB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACKzB,OAAA;MAAK0B,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC7BzB,OAAA;QAAO2B,IAAI,EAAC,MAAM;QAACD,SAAS,EAAC,mBAAmB;QAACE,WAAW,EAAC,sCAAsC;QAAClB,KAAK,EAAEL,IAAK;QAACwB,QAAQ,EAAItB;MAAa;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC5IjC,OAAA;QAAQ0B,SAAS,EAAC,4BAA4B;QAACQ,KAAK,EAAE;UAACC,eAAe,EAAG;QAAY,CAAE;QAAAV,QAAA,EAAC;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5G,CAAC,eACNjC,OAAA,CAACF,SAAS;MAACO,IAAI,EAAEA,IAAK;MAACgB,MAAM,EAAEA;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAC3C,CAAC;AAEV;AAAC7B,EAAA,CAlCQD,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAmClB,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}