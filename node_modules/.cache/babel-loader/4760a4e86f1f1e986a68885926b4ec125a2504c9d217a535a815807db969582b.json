{"ast":null,"code":"var _jsxFileName = \"/Users/goodwinenoch/textanalyzer/src/components/WordInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport DataTable from \"./DataTable\";\nimport WordDictionary from \"./WordDictionary\";\nimport wordSearch from \"./wordSearch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WordInput() {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const [wordDesc, setWordDesc] = useState(\"\");\n  const handleChange = event => {\n    event.preventDefault();\n    setWord(event.target.value);\n  };\n  const handleClick = async event => {\n    event.preventDefault();\n    const response = await wordSearch(word);\n    setWordDesc(response);\n  };\n  const noOfWords = words => words.split(/[ .:;?!~,`\"&|()<>{}[\\]\\r\\n/\\\\]+/).filter(item => {\n    item = item.replace(/[^\\w\\s']|_/g, '');\n    return item !== '';\n  });\n\n  // header and logic for data table\n  const config = [{\n    label: 'Characters',\n    render: word => word.length\n  }, {\n    label: 'Words',\n    render: word => noOfWords(word).length\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex mb-3 mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control me-3\",\n        placeholder: \"Type in a single word ex: developer \",\n        value: word,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn text-nowrap text-white\",\n        style: {\n          backgroundColor: \"blueviolet\"\n        },\n        onClick: handleClick,\n        children: \"Process Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      word: word,\n      config: config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-2\",\n      children: wordDesc === \"\" ? null : /*#__PURE__*/_jsxDEV(WordDictionary, {\n        data: wordDesc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(WordInput, \"WbPXRCoyt5dWMObMg6h+ZgLdJQE=\");\n_c = WordInput;\nexport default WordInput;\nvar _c;\n$RefreshReg$(_c, \"WordInput\");","map":{"version":3,"names":["useState","DataTable","WordDictionary","wordSearch","jsxDEV","_jsxDEV","Fragment","_Fragment","WordInput","_s","word","setWord","wordDesc","setWordDesc","handleChange","event","preventDefault","target","value","handleClick","response","noOfWords","words","split","filter","item","replace","config","label","render","length","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","onClick","data","_c","$RefreshReg$"],"sources":["/Users/goodwinenoch/textanalyzer/src/components/WordInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport DataTable from \"./DataTable\";\nimport WordDictionary from \"./WordDictionary\";\nimport wordSearch from \"./wordSearch\";\n\nfunction WordInput (){\n\n    const [word, setWord] = useState(\"\");\n    const [wordDesc, setWordDesc] = useState(\"\");\n\n    const handleChange = (event)=>{\n        event.preventDefault();\n        setWord(event.target.value);\n    }\n\n    const handleClick = async (event)=>{\n        event.preventDefault();\n        const response = await wordSearch(word);\n        setWordDesc(response);\n    }\n    const noOfWords = (words) => words.split(/[ .:;?!~,`\"&|()<>{}[\\]\\r\\n/\\\\]+/ ).filter(item => {\n        item = item.replace(/[^\\w\\s']|_/g, '')\n        return item !== ''; \n    });\n\n    // header and logic for data table\n    const config = [\n    {\n        label: 'Characters',\n        render: (word) => word.length\n    },\n    {\n        label: 'Words',\n        render: (word) => noOfWords(word).length\n    }\n    ];\n      \n    return(\n       <>\n            <form className=\"d-flex mb-3 mt-3\">\n                <input type=\"text\" className=\"form-control me-3\" placeholder=\"Type in a single word ex: developer \" value={word} onChange = {handleChange}/>   \n                <button className=\"btn text-nowrap text-white\" style={{backgroundColor : \"blueviolet\"}} onClick={handleClick}>Process Word</button>\n            </form>\n            <DataTable word={word} config={config}/> \n            <div className=\"border p-2\">\n                {wordDesc === \"\" ? null : <WordDictionary data={wordDesc}/>}\n            </div>\n       </>\n    )\n}\nexport default WordInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}