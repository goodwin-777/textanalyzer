{"ast":null,"code":"var _jsxFileName = \"/Users/goodwinenoch/textanalyzer/src/components/WordInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport DataTable from \"./DataTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WordInput() {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const handleChange = event => {\n    setWord(event.target.value);\n  };\n  const noOfWords = word.split(\" \").filter(item => item != '').length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex mb-3 mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control me-3\",\n        placeholder: \"Type in a single word ex: developer \",\n        value: word,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn text-nowrap text-white\",\n        style: {\n          backgroundColor: \"blueviolet\"\n        },\n        children: \"Process Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      word: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(WordInput, \"KIhUDbJtUcjE+1oNeU7mNfhsQvU=\");\n_c = WordInput;\nexport default WordInput;\nvar _c;\n$RefreshReg$(_c, \"WordInput\");","map":{"version":3,"names":["useState","DataTable","jsxDEV","_jsxDEV","Fragment","_Fragment","WordInput","_s","word","setWord","handleChange","event","target","value","noOfWords","split","filter","item","length","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/goodwinenoch/textanalyzer/src/components/WordInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport DataTable from \"./DataTable\";\n\nfunction WordInput (){\n    const [word, setWord] = useState(\"\");\n    const handleChange = (event)=>{\n        setWord(event.target.value);\n    }\n\n    const noOfWords = word.split(\" \").filter(item => item != '').length;\n    return(\n       <>\n            <div className=\"d-flex mb-3 mt-3\">\n                <input type=\"text\" className=\"form-control me-3\" placeholder=\"Type in a single word ex: developer \" value={word} onChange = {handleChange}/>   \n                <button className=\"btn text-nowrap text-white\" style={{backgroundColor : \"blueviolet\"}}>Process Word</button>\n            </div>\n            <DataTable word={word}/>   \n       </>\n    )\n}\nexport default WordInput;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMU,YAAY,GAAIC,KAAK,IAAG;IAC1BF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,SAAS,GAAGN,IAAI,CAACO,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,IAAI,EAAE,CAAC,CAACC,MAAM;EACnE,oBACGf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACKhB,OAAA;MAAKiB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC7BhB,OAAA;QAAOkB,IAAI,EAAC,MAAM;QAACD,SAAS,EAAC,mBAAmB;QAACE,WAAW,EAAC,sCAAsC;QAACT,KAAK,EAAEL,IAAK;QAACe,QAAQ,EAAIb;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC5IxB,OAAA;QAAQiB,SAAS,EAAC,4BAA4B;QAACQ,KAAK,EAAE;UAACC,eAAe,EAAG;QAAY,CAAE;QAAAV,QAAA,EAAC;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5G,CAAC,eACNxB,OAAA,CAACF,SAAS;MAACO,IAAI,EAAEA;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAC3B,CAAC;AAEV;AAACpB,EAAA,CAhBQD,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAiBlB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}